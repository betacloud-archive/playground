---
- name: Provision kubeadm test
  hosts: all
  remote_user: root
  pre_tasks:
    - name: update all packages
      ansible.builtin.apt:
        update_cache: true
        name: "*"
        state: latest

    - name: install some basic packages
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - htop
          - tree
          - jq
          - tmux
          - screen
          - sshpass
          - open-iscsi
        state: latest

    - name: select first control plane
      ansible.builtin.set_fact:
        kubernetes_role: 'master'
      when: inventory_hostname == ansible_play_hosts_all[0]

    - name: select rest of nodes
      ansible.builtin.set_fact:
        kubernetes_role: 'node'
      when: not inventory_hostname == ansible_play_hosts_all[0]

  roles:
    - name: install docker
      role: geerlingguy.docker

    - name: setup kubernetes cluster
      role: ansible-role-kubernetes
      vars:
        kubernetes_calico_manifest_file:
          'https://docs.projectcalico.org/manifests/calico.yaml'
        kubernetes_config_cluster_configuration:
          networking:
            podSubnet: "{{ kubernetes_pod_network.cidr }}"
          kubernetesVersion: "{{ kubernetes_version_kubeadm }}"
          controlPlaneEndpoint: "{{ ansible_default_ipv4.address }}:6443"
        kubernetes_kubeadm_init_extra_opts: '--upload-certs'
        kubernetes_join_command_extra_opts:
          "--control-plane --ignore-preflight-errors all --certificate-key
           {{ kubernetes_join_command_certificate_key.stdout_lines[2] }}"
        kubernetes_pod_network:
          cni: 'calico'
          cidr: '192.168.0.0/16'
        kubernetes_version: '1.21'

    - name: install helm
      role: geerlingguy.helm
      vars:
        helm_version: 'v3.5.4'

  tasks:
    - name: On all control planes except the first one
      block:
        - name: Ensure .kube directory exists.
          file:
            path: ~/.kube
            state: directory
            mode: 0755

        - name: Symlink the kubectl admin.conf to ~/.kube/conf.
          file:
            src: /etc/kubernetes/admin.conf
            dest: ~/.kube/config
            state: link
            mode: 0644
      when: not kubernetes_role == 'master'

    - name: add kubectl autocompletion
      ansible.builtin.lineinfile:
        path: "/root/.bashrc"
        line: 'source <(kubectl completion bash)'

    - name: add bitnami helm repo
      community.kubernetes.helm_repository:
        name: bitnami
        repo_url: https://charts.bitnami.com/bitnami

    - name: add longhorn helm repo
      community.kubernetes.helm_repository:
        name: longhorn
        repo_url: https://charts.longhorn.io

    - name: Only on first control plane
      block:
        - name: Allow pods on all control plane nodes.
          command: "kubectl taint nodes --all node-role.kubernetes.io/master-"
          changed_when: false
          failed_when: false
          ignore_errors: true

        - name: install metallb chart
          community.kubernetes.helm:
            release_name: metallb
            release_namespace: metallb
            create_namespace: true
            update_repo_cache: true
            chart_ref: bitnami/metallb

        - name: install nginx-ingress chart
          community.kubernetes.helm:
            release_name: nginx
            release_namespace: ingress-nginx
            create_namespace: true
            update_repo_cache: true
            chart_ref: bitnami/nginx-ingress-controller
            release_values:
              hostNetwork: true

        - name: install metrics server chart
          community.kubernetes.helm:
            release_name: metrics
            release_namespace: kube-system
            update_repo_cache: true
            chart_ref: bitnami/metrics-server
            release_values:
              securePort: 4443
              apiService:
                create: true
              extraArgs:
                cert-dir: /tmp
                kubelet-insecure-tls:
                kubelet-preferred-address-types:
                  'InternalIP,ExternalIP,Hostname'

        - name: Wait 1 minutes
          ansible.builtin.pause:
            minutes: 1

        - name: install longhorn chart
          community.kubernetes.helm:
            release_name: longhorn
            release_namespace: longhorn-system
            create_namespace: true
            update_repo_cache: true
            chart_ref: longhorn/longhorn
            release_values:
              ingress:
                enabled: true
                host: "longhorn.{{ ansible_default_ipv4.address }}.nip.io"
      when: kubernetes_role == 'master'
